// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Whatshot = (function() {

    function Whatshot(args) {
      var default_args, name, value;
      this.args = args != null ? args : {};
      this.whatshot = __bind(this.whatshot, this);

      this.new_events_arrived = __bind(this.new_events_arrived, this);

      this.get_args = __bind(this.get_args, this);

      default_args = {
        url: {
          user: site_url('event/mixed_whatshot'),
          "public": site_url('event/public_whatshot'),
          mixed: site_url('event/mixed_whatshot')
        }
      };
      for (name in default_args) {
        value = default_args[name];
        this.args[name] = this.args[name] || value;
      }
      this.events = [];
      this.called_public = false;
    }

    Whatshot.prototype.has_events = function() {
      return this.events.length > 0;
    };

    Whatshot.prototype.get_events = function() {
      return this.events;
    };

    Whatshot.prototype.set_events = function(events) {
      if (is_array(events)) {
        return this.events = events;
      } else {
        return this.events = [];
      }
    };

    Whatshot.prototype.get_url = function() {
      if (_user.is_logged()) {
        if (this.called_public) {
          return this.args.url.user;
        } else {
          return this.args.url.mixed;
        }
      }
      this.called_public = true;
      return this.args.url["public"];
    };

    Whatshot.prototype.get_args = function() {
      var args;
      args = this.args.services.get_user_coordinates();
      return args;
    };

    Whatshot.prototype.new_events_arrived = function(data) {
      this.set_events(data.events);
      if (this.args.new_events_callback) {
        return this.args.new_events_callback(this.get_events());
      }
    };

    Whatshot.prototype.whatshot = function() {
      var args, url;
      url = this.get_url();
      args = this.get_args();
      return $.post(url, args, this.new_events_arrived, 'json');
    };

    return Whatshot;

  })();

}).call(this);
