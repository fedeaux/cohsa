// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Transitioner = (function() {
    var _instance;

    _instance = null;

    Transitioner.get = function() {
      var _ref;
      return (_ref = window._transitioner) != null ? _ref : window._transitioner = new Transitioner;
    };

    function Transitioner() {
      this.slide_right = __bind(this.slide_right, this);

      this.slide_left = __bind(this.slide_left, this);

      this.slide_down = __bind(this.slide_down, this);

      this.slide_up = __bind(this.slide_up, this);

      this.cross_fade = __bind(this.cross_fade, this);

      this.register_on_complete_callback = __bind(this.register_on_complete_callback, this);
      this.debug = is_debug('transitioner');
      this.default_time = 500;
    }

    Transitioner.prototype.register_on_complete_callback = function(target, complete) {
      return target.one('webkitTransitionEnd transitionend', function() {
        return play_list(complete);
      });
    };

    Transitioner.prototype.pre = function() {
      layout.global_adjustments();
      return Form.init();
    };

    Transitioner.prototype.cross_fade = function(o_el, n_el, container, before, complete) {
      if (this.debug) {
        console.log('TR: cross fade');
      }
      container.append(n_el);
      o_el.hide();
      play_list(before);
      play_list(complete);
      return o_el.remove();
    };

    Transitioner.prototype.slide_up = function(o_el, n_el, container, before, complete) {
      var c_h, n_el_h;
      if (this.debug) {
        console.log('TR: slide up');
      }
      container.append(n_el);
      play_list(before);
      complete.push(function() {
        return n_el.removeClass('current_page slider hide_bottom');
      });
      this.register_on_complete_callback(n_el, complete);
      n_el_h = n_el.height();
      c_h = container.height();
      n_el.width(n_el.width());
      n_el.prev_post = n_el.css('position');
      n_el.css('position', 'absolute');
      o_el.height(o_el.height());
      n_el.height(n_el.height());
      n_el.addClass('hide_bottom');
      n_el.show();
      n_el.css('z-index', '3000');
      n_el.addClass('slider');
      return n_el.addClass('current_page');
    };

    Transitioner.prototype.slide_down = function(o_el, n_el, container, before, complete) {
      if (this.debug) {
        console.log('TR: slide down');
      }
      play_list(before);
      complete.push(function() {
        return o_el.remove();
      });
      this.register_on_complete_callback(o_el, complete);
      n_el.css('position', 'absolute');
      o_el.addClass('slider');
      return o_el.addClass('hide_bottom');
    };

    Transitioner.prototype.slide_left = function(o_el, n_el, container, before, complete) {
      if (this.debug) {
        console.log('TR: slide left');
      }
      container.append(n_el);
      play_list(before);
      complete.push(function() {
        o_el.remove();
        return n_el.removeClass('current_page slider hide_right');
      });
      this.register_on_complete_callback(n_el, complete);
      n_el.addClass('hide_right');
      o_el.css('z-index', (n_el.css('z-index')) - 1);
      n_el.addClass('slider');
      return n_el.addClass('current_page');
    };

    Transitioner.prototype.slide_right = function(o_el, n_el, container, before, complete) {
      var curr_offset;
      if (this.debug) {
        console.log('TR: slide right');
      }
      curr_offset = o_el.offset();
      container.prepend(n_el);
      n_el.css('position', 'absolute');
      play_list(before);
      complete.push(function() {
        return o_el.remove();
      });
      this.register_on_complete_callback(o_el, complete);
      o_el.offset(curr_offset);
      o_el.addClass('slider');
      return o_el.addClass('hide_right');
    };

    return Transitioner;

  })();

}).call(this);
