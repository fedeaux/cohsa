// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Scroller = (function() {

    function Scroller(selector) {
      this.selector = selector;
      this.reset = __bind(this.reset, this);

      this.scroll = __bind(this.scroll, this);

      this.on_scroll = __bind(this.on_scroll, this);

      this.scrollbar_content_scrolled = __bind(this.scrollbar_content_scrolled, this);

      this.add_scrollbar = __bind(this.add_scrollbar, this);

      this.eval_scrollbar_top_function = __bind(this.eval_scrollbar_top_function, this);

      this.eval_scrollbar_height = __bind(this.eval_scrollbar_height, this);

      this.is_scrolling = __bind(this.is_scrolling, this);

      this.hide_scrollbar = __bind(this.hide_scrollbar, this);

      this.finish_scrolling = __bind(this.finish_scrolling, this);

      this.start_scrolling = __bind(this.start_scrolling, this);

      this._start_scrolling = __bind(this._start_scrolling, this);

      this._scroll = __bind(this._scroll, this);

      this.is_touch = false;
      try {
        document.createEvent("TouchEvent");
        this.is_touch = true;
      } catch (_error) {}
    }

    Scroller.prototype.isTouchDevice = function() {
      return this.is_touch;
    };

    Scroller.prototype._scroll = function(e) {
      e.preventDefault();
      if (e.originalEvent != null) {
        e = e.originalEvent;
      }
      return this.scroll(e);
    };

    Scroller.prototype._start_scrolling = function(e) {
      if (e.originalEvent != null) {
        e = e.originalEvent;
      }
      this.is_touch = true;
      return this.start_scrolling(e);
    };

    Scroller.prototype.start_scrolling = function(e) {
      this.scrollable = $(this.selector);
      console.log(this.scrollable, this.scrollable[0].scrollTop);
      this.current_position = e.pageY + this.scrollable[0].scrollTop;
      this.scrollable.css('position', 'relative');
      return this.min_top = this.scrollable.parent().innerHeight() - this.scrollable.height();
    };

    Scroller.prototype.finish_scrolling = function(e) {
      this.scrollable = null;
      return this.hide_scrollbar();
    };

    Scroller.prototype.hide_scrollbar = function() {
      var _ref;
      return (_ref = this.scrollbar) != null ? _ref.fadeOut() : void 0;
    };

    Scroller.prototype.is_scrolling = function() {
      return _mouse.is_down();
    };

    Scroller.prototype.eval_scrollbar_height = function() {
      return this.scrollable.parent().height() * this.scrollable.parent().height() / this.scrollable.height();
    };

    Scroller.prototype.eval_scrollbar_top_function = function() {
      var a, b, y0,
        _this = this;
      y0 = this.scrollable.parent().offset().top;
      b = y0;
      a = (this.scrollable.parent().height() - this.scrollbar.height()) / (this.scrollable.height() - this.scrollable.parent().height());
      return function(new_top) {
        var D;
        D = -new_top;
        return a * D + b;
      };
    };

    Scroller.prototype.add_scrollbar = function() {
      if (!($('.scroller-scrollbar', this.selector).length > 0)) {
        this.scrollbar = $('<div class="scroller-scrollbar"> &nbsp; </div>');
        this.scrollbar.height(this.eval_scrollbar_height());
        this.scrollbar.f = this.eval_scrollbar_top_function();
        return $(this.selector).append(this.scrollbar);
      } else {
        return this.scrollbar.fadeIn();
      }
    };

    Scroller.prototype.scrollbar_content_scrolled = function(new_top, dx) {
      return this.scrollbar.offset({
        top: this.scrollbar.f(new_top)
      });
    };

    Scroller.prototype.on_scroll = function(new_top, dx) {
      this.add_scrollbar();
      return this.scrollbar_content_scrolled(new_top, dx);
    };

    Scroller.prototype.scroll = function(e) {
      if (this.scrollable != null) {
        console.log(this.current_position + e.pageY, this.current_position, e.pageY);
        this.scrollable[0].scrollTop = this.current_position + e.pageY;
        e.preventDefault();
        return false;
      }
    };

    Scroller.prototype.reset = function() {
      this.scrollable = null;
      return this.scrollable = $(this.selector);
    };

    return Scroller;

  })();

}).call(this);
