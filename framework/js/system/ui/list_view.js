// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.ListView = (function() {

    ListView.prototype.close = function() {
      return this.args.onClose(this.list_overlay);
    };

    ListView.prototype.get = function() {
      return this.list_view;
    };

    function ListView(args) {
      var default_args, id, list, list_wrapper, name, value,
        _this = this;
      this.args = args;
      this.get = __bind(this.get, this);

      this.close = __bind(this.close, this);

      id = 'list-view-container-' + unique_id();
      default_args = {
        add_class: '',
        container: 'body',
        close_politics: 'fade'
      };
      for (name in default_args) {
        value = default_args[name];
        this.args[name] = this.args[name] || value;
      }
      list = $('<div class="list-view">\
              </div>');
      this.list_overlay = $('<div class="list-view-overlay ' + this.args.add_class + '">\
                      </div>');
      list_wrapper = $('<div class="list-view-html-wrapper scroll-y">\
                      </div>');
      this.list_view = $('<div id="' + id + '"\
                          class="list-view-container">\
                       </div>');
      list_wrapper.append(list);
      this.list_view.append(list_wrapper);
      list.html(this.args.html);
      this.list_overlay.append(this.list_view);
      $(this.args.container).append(this.list_overlay);
      if (this.args.title) {
        this.list_view.prepend('<div class="list-view-header width_full">\
        ' + this.args.title + '\
      </div>');
      } else {
        list_wrapper.addClass('list-view-no-header');
      }
      this.list_view.append('<div class="actions width_full list-view-close list-view-action-close">\
          CLOSE\
        </div>');
      if (is_function(ListView.configuration.after_show)) {
        ListView.configuration.after_show();
      }
      if (is_function(this.args.after_show)) {
        this.args.after_show();
      }
      if (this.args.onClose == null) {
        this.args.onClose = function(ls) {
          if (_this.args.close_politics === 'fade') {
            return ls.fadeOut();
          } else {
            return ls.remove();
          }
        };
      }
      $('.list-view-action-close').click(function() {
        return _this.close();
      });
      if (is_function(this.args.on_show)) {
        this.args.on_show();
      }
    }

    return ListView;

  })();

}).call(this);
