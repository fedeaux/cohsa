// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.DatetimePicker = (function() {

    DatetimePicker.days_per_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

    function DatetimePicker(input, date_args, time_args) {
      this.input = input;
      this.date_args = date_args != null ? date_args : {};
      this.time_args = time_args != null ? time_args : {};
      this.update_input = __bind(this.update_input, this);

      this.date_changed = __bind(this.date_changed, this);

      this.time_changed = __bind(this.time_changed, this);

      this.container = this.input.parent();
      this.my_id = unique_id();
      this.initial_value = this.input.val();
      if (this.container.hasClass('datetime_select_parsed')) {
        return;
      }
      this.container.addClass('datetime_select_parsed');
      this.create_inputs();
    }

    DatetimePicker.prototype.create_inputs = function() {
      var container_class, values;
      container_class = 'datetime_selector_container_' + this.my_id;
      this.container.addClass(container_class);
      values = this.initial_value.split(' ');
      this.set_current_time(values[1]);
      this.set_current_date(values[0]);
      this.time_input = $('<input type="text"\
                            value="' + values[1] + '"\
                            id="datetime_time_picker_' + this.my_id + '" />');
      this.date_input = $('<input type="text"\
                            value="' + values[0] + '"\
                            id="datetime_date_picker_' + this.my_id + '" />');
      this.input.after(this.time_input);
      this.input.after(this.date_input);
      this.time_args.time_changed = this.time_changed;
      this.date_args.date_changed = this.date_changed;
      this.time_picker = new TimePicker(this.time_input, this.time_args);
      this.date_picker = new DatePicker(this.date_input, this.date_args);
      return this.input.hide();
    };

    DatetimePicker.prototype.time_changed = function(time) {
      this.set_current_time(time.getHours() + ':' + pad(time.getMinutes(), 2) + ':' + pad(time.getSeconds(), 2));
      return this.update_input();
    };

    DatetimePicker.prototype.date_changed = function(date) {
      this.set_current_date($.datepicker.formatDate('yy-mm-dd', date));
      return this.update_input();
    };

    DatetimePicker.prototype.update_input = function() {
      return this.input.val(this.get_current_datetime());
    };

    DatetimePicker.prototype.set_current_time = function(time) {
      return this.current_time = time;
    };

    DatetimePicker.prototype.set_current_date = function(date) {
      return this.current_date = date;
    };

    DatetimePicker.prototype.get_current_datetime = function() {
      return this.get_current_date() + ' ' + this.get_current_time();
    };

    DatetimePicker.prototype.get_current_time = function(time) {
      return this.current_time;
    };

    DatetimePicker.prototype.get_current_date = function(date) {
      return this.current_date;
    };

    DatetimePicker.prototype.create_time_input = function() {
      return console.log('');
    };

    return DatetimePicker;

  })();

}).call(this);
