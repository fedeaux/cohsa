// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Popup = (function() {

    function Popup(url, args) {
      var popup_options;
      this.args = args != null ? args : {};
      this.on_load_stop = __bind(this.on_load_stop, this);

      this.global_load_stop = __bind(this.global_load_stop, this);

      popup_options = ['toolbar=no', 'location=no', 'status=no', 'menubar=no', 'scrollbars=no', 'resizable=no', 'width=' + this.args.size.width, 'height=' + this.args.size.height];
      this.dialog_window = window.open(url, '_blank', popup_options.join(','));
      this.args.callbacks = this.args.callbacks || {};
      this.dialog_window.addEventListener('loadstop', this.global_load_stop);
    }

    Popup.prototype.global_load_stop = function(event) {
      return this.dialog_window.executeScript({
        code: "      (function() {        if(typeof jQuery != 'undefined') {          response = {};            $('#response_data input').each(function() {            t = $(this);            response[t.attr('name')] = t.val();          });            return JSON.stringify(response);        }      })()    "
      }, this.on_load_stop);
    };

    Popup.prototype.on_load_stop = function(data) {
      if (this.args.callbacks.on_load_stop != null) {
        if (this.args.callbacks.on_load_stop(data)) {
          this.dialog_window.close();
          return delete this.dialog_window;
        }
      }
    };

    return Popup;

  })();

}).call(this);
