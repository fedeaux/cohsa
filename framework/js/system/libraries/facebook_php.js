// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Facebook = (function() {

    function Facebook(args) {
      var default_args, name, value, _base, _ref;
      this.args = args;
      this.event = __bind(this.event, this);

      this.on_login = __bind(this.on_login, this);

      this.login = __bind(this.login, this);

      default_args = {
        fbAsyncInit: this.fbAsyncInit
      };
      for (name in default_args) {
        value = default_args[name];
        this.args[name] = (_ref = (_base = this.args)[name]) != null ? _ref : _base[name] = value;
      }
    }

    Facebook.prototype.FB = function() {
      return this._FB;
    };

    Facebook.prototype.login = function() {
      var facebook_login_url;
      facebook_login_url = (_nw.async_request('user/get_facebook_login_url')).facebook_login_url;
      return new Popup(facebook_login_url, {
        size: {
          width: $('#wrapper').width(),
          height: $('#wrapper').height()
        },
        callbacks: {
          on_load_stop: function(json_facebook_user_data) {
            var alternative_login_info, facebook_user_data;
            try {
              facebook_user_data = JSON.parse(json_facebook_user_data);
            } catch (error) {
              return false;
            }
            if (is_object(facebook_user_data)) {
              alternative_login_info = {
                auth_response: facebook_user_data
              };
              _user.alternative_login(alternative_login_info, 'facebook');
              return true;
            }
          }
        }
      });
    };

    Facebook.prototype.on_login = function(response) {
      if (response.authResponse) {
        this.event('after_login_success', {
          auth_response: response.authResponse
        });
      } else {
        this.event('after_login_failed', this.fb_user_info);
      }
      return this.event('after_login_complete');
    };

    Facebook.prototype.event = function(name, args) {
      if (args == null) {
        args = {};
      }
      if (this.args.callbacks[name] != null) {
        return this.args.callbacks[name](args);
      }
    };

    return Facebook;

  })();

}).call(this);
