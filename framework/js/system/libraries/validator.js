// Generated by CoffeeScript 1.4.0
(function() {

  this.Validator = (function() {
    var _this = this;

    function Validator() {}

    Validator.debug = is_debug('validator');

    Validator.block = false;

    Validator.default_messages = {
      required: "This is a required field",
      regex: "Wrong format",
      equal_to: "Passwords mismatch",
      existent: "Existent"
    };

    Validator.v = {
      required: function(f) {
        if (Validator.v._required(f.val())) {
          Validator.message(f, "required");
          return true;
        }
      },
      regex: function(f, v) {
        if (Validator.v._regex(f.val(), v)) {
          Validator.message(f, "regex");
          return true;
        }
      },
      equal_to: function(f, v) {
        if (Validator.debug) {
          console.log(f, v);
        }
        if (Validator.v._equal_to(f.val(), v)) {
          Validator.message(f, "equal_to");
          return true;
        }
      },
      ajax: function(e) {
        var t;
        t = $(e.target);
        t.siblings(".validation-ajax-message").remove();
        t.attr("data-validation-message", null);
        return $.post(site_url($(Validator).attr("data-validation-ajax-url")), {
          name: $(Validator).attr("name"),
          value: $(Validator).attr("value")
        }, (function(data) {
          if (data.message_slug !== "") {
            Validator.message(t, data.message_slug, "validation-ajax-message");
            return t.attr("data-validation-ajax-error", "");
          } else {
            return t.removeAttr("data-validation-ajax-error");
          }
        }), "json");
      },
      _required: function(v) {
        return v === "";
      },
      _regex: function(v, rg) {
        var _rg;
        _rg = new RegExp(rg, "ig");
        return !_rg.test(v);
      },
      _equal_to: function(v, s) {
        return v !== $("[name=\"" + s + "\"]").val();
      }
    };

    Validator.message = function(f, slug, add) {
      var msg, _msg;
      if (add == null) {
        add = '';
      }
      if (f.attr("data-validation-message") == null) {
        f.attr("data-validation-message", slug);
        msg = f.attr("data-validation-" + slug + "-message") || Validator.default_messages[slug];
        _msg = $("<span class=\"validation-error-message " + add + "\">" + msg + "</span>");
        return layout.positionOnTopRight(_msg, f);
      }
    };

    Validator.validate = function(f) {
      var block, _equal_to, _regex, _required;
      _required = f.attr("data-validation-required");
      _regex = f.attr("data-validation-regex");
      _equal_to = f.attr("data-validation-equal-to");
      block = false;
      if (_required != null) {
        block = Validator.v.required(f) || block;
      }
      if (_regex != null) {
        block = Validator.v.regex(f, _regex) || block;
      }
      if (_equal_to != null) {
        block = Validator.v.equal_to(f, _equal_to) || block;
      }
      return block;
    };

    Validator.init = function() {
      $(document).on("keyup", "[data-validation-ajax-type=\"single\"]", Validator.v.ajax).on("blur", "[data-validation-ajax-type=\"single\"]", Validator.v.ajax);
      return $(document).on("submit", "form", Validator.perform_validations);
    };

    Validator.perform_validations = function(e) {
      var form;
      form = $(e.target);
      $("[data-validation-ajax-type=\"single\"]", form).blur();
      $(".validation-error-message", form).remove();
      $("[data-validation-message]", form).attr("data-validation-message", null);
      Validator.block = false;
      $("[data-validation-validate]", form).each(function() {
        return Validator.block = Validator.validate($(Validator)) || Validator.block;
      });
      Validator.block = $("[data-validation-ajax-error]").length > 0 || Validator.block;
      if (Validator.block) {
        e.preventDefault();
        return false;
      }
    };

    Validator.ajax_perform_validations = function(form, options) {
      var f, _i, _len, _ref;
      if (options == null) {
        options = null;
      }
      if (Validator.debug) {
        console.log('VL: ', form, options);
      }
      $("[data-validation-ajax-type=\"single\"]", form).blur();
      $(".validation-error-message", form).remove();
      $("[data-validation-message]", form).attr("data-validation-message", null);
      Validator.block = false;
      _ref = $("[data-validation-validate]", form);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        f = _ref[_i];
        if (Validator.debug) {
          console.log('VL: validate field ', $(f));
        }
        Validator.block = Validator.validate($(f)) || Validator.block;
      }
      if (Validator.debug) {
        console.log('VL: ajax: ', $("[data-validation-ajax-error]").length, 'block', Validator.block);
      }
      return !($("[data-validation-ajax-error]").length > 0 || Validator.block);
    };

    return Validator;

  }).call(this);

}).call(this);
