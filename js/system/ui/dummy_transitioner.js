// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.DummyTransitioner = (function() {
    var _instance;

    _instance = null;

    DummyTransitioner.get = function() {
      var _ref;
      return (_ref = window._transitioner) != null ? _ref : window._transitioner = new DummyTransitioner;
    };

    function DummyTransitioner() {
      this.slide_left = __bind(this.slide_left, this);

      this.slide_down = __bind(this.slide_down, this);

      this.slide_up = __bind(this.slide_up, this);

      this.slide_right = __bind(this.slide_right, this);

      this.cross_fade = __bind(this.cross_fade, this);

      this.replace = __bind(this.replace, this);
      this.debug = is_debug('transitioner');
      this.default_time = 500;
    }

    DummyTransitioner.prototype.pre = function() {
      layout.global_adjustments();
      return Form.init();
    };

    DummyTransitioner.prototype.replace = function(o_el, n_el, container, before, complete, original) {
      container.prepend(n_el);
      play_list(before);
      if (original !== 'slide_up') {
        o_el.remove();
      }
      n_el.show();
      return play_list(complete);
    };

    DummyTransitioner.prototype.cross_fade = function(o_el, n_el, container, before, complete) {
      return this.replace(o_el, n_el, container, before, complete, 'cross_fade');
    };

    DummyTransitioner.prototype.slide_right = function(o_el, n_el, container, before, complete) {
      return this.replace(o_el, n_el, container, before, complete, 'slide_right');
    };

    DummyTransitioner.prototype.slide_up = function(o_el, n_el, container, before, complete) {
      return this.replace(o_el, n_el, container, before, complete, 'slide_up');
    };

    DummyTransitioner.prototype.slide_down = function(o_el, n_el, container, before, complete) {
      return this.replace(o_el, n_el, container, before, complete, 'slide_down');
    };

    DummyTransitioner.prototype.slide_left = function(o_el, n_el, container, before, complete) {
      return this.replace(o_el, n_el, container, before, complete, 'slide_left');
    };

    return DummyTransitioner;

  })();

}).call(this);
