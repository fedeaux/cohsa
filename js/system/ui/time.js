// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.TimePicker = (function() {

    function TimePicker(input, args) {
      var default_args, initial_value, name, value;
      this.input = input;
      this.args = args != null ? args : {};
      this.select_changed = __bind(this.select_changed, this);

      this.update_input = __bind(this.update_input, this);

      this.set_time = __bind(this.set_time, this);

      this.container = this.input.parent();
      initial_value = this.input.val();
      if (this.container.hasClass('time_select_parsed')) {
        return;
      }
      this.container.addClass('time_select_parsed');
      default_args = {
        minutes_step: 15,
        max_hour: 23
      };
      for (name in default_args) {
        value = default_args[name];
        this.args[name] = this.args[name] || value;
      }
      this.change_dom();
      this.set_time(initial_value);
    }

    TimePicker.prototype.change_dom = function() {
      this.input.after(JSV.time.picker(this.args));
      this.input.hide();
      this.select_hour = $('.time_select_hour', this.container);
      this.select_minute = $('.time_select_minute', this.container);
      $('.time_select').live('change', this.select_changed);
      return this.select_changed();
    };

    TimePicker.prototype.set_time = function(time) {
      var _time;
      _time = break_time(time);
      if (_time != null) {
        this.set_current_hours(_time.hours);
        this.set_current_minutes(_time.minutes);
        return this.select_changed();
      }
    };

    TimePicker.prototype.update_input = function() {
      this.update_selected_values();
      this.input.val(this.select_hour.val() + ":" + this.select_minute.val());
      if (this.args.time_changed) {
        return this.args.time_changed(this.current_time);
      }
    };

    TimePicker.prototype.select_changed = function() {
      return this.update_input();
    };

    TimePicker.prototype.set_current_hours = function(hour) {
      return this.select_hour.val(hour);
    };

    TimePicker.prototype.set_current_minutes = function(minute) {
      this.select_minute.val(minute);
      return this.update_selected_values();
    };

    TimePicker.prototype.update_selected_values = function() {
      this.current_hour = parseInt(this.select_hour.val());
      this.current_minute = parseInt(this.select_minute.val());
      return this.current_time = new Date(0, 0, 0, this.current_hour, this.current_minute);
    };

    return TimePicker;

  })();

}).call(this);
