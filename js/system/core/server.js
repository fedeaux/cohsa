// Generated by CoffeeScript 1.4.0
(function() {
  var Server,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Server = (function() {

    function Server() {
      this.synchronous_request = __bind(this.synchronous_request, this);

      this.set_synchronous_request_response = __bind(this.set_synchronous_request_response, this);

      this.post = __bind(this.post, this);

      this.post_get_form = __bind(this.post_get_form, this);

      this.ajax_submit_args = __bind(this.ajax_submit_args, this);
      this.ajax = {
        async: false,
        dataType: "json",
        success: function(data) {
          return self.response = data;
        }
      };
      this.requests = [];
      $(document).on('click', '.submit-form', this.post);
    }

    Server.prototype.ajax_submit_args = function(_form) {
      var ajax_submit, trigger, _trigger,
        _this = this;
      _trigger = _form.attr('data-trigger');
      trigger = (_trigger != null) && eval(_trigger + '()');
      if (trigger == null) {
        trigger = {};
      }
      return ajax_submit = {
        beforeSerialize: function(values, form, options) {
          var v;
          Form.clear_clearfield();
          v = Validator.ajax_perform_validations(_form);
          if (v) {
            layout.blockScreen();
          } else {
            Form._clear_field($('[data-placeholder]'));
          }
          if (trigger.beforeSerialize != null) {
            trigger.beforeSerialize(values, form, options);
          }
          return v;
        },
        success: function(response, status, xhr, form) {
          layout.unblockScreen();
          if (trigger.success != null) {
            return trigger.success(response, status, xhr, form);
          }
        },
        error: function(jqXHR, textStatus, errorThrown) {
          console.log(jqXHR.responseText);
          console.log(textStatus);
          console.log(errorThrown);
          layout.unblockScreen();
          return layout.defaultError();
        },
        dataType: 'json',
        data: {
          phonegap: 'phonegap'
        }
      };
    };

    Server.prototype.post_get_form = function() {
      return $('.main_form');
    };

    Server.prototype.post = function() {
      var form;
      form = this.post_get_form();
      return form.ajaxSubmit(this.ajax_submit_args(form));
    };

    Server.prototype.set_synchronous_request_response = function(data) {
      return this.synchronous_request_response = data;
    };

    Server.prototype.synchronous_request = function(url, data) {
      var settings;
      if (data == null) {
        data = null;
      }
      url = meaningfy_url(url);
      settings = {
        dataType: 'json',
        type: 'post',
        data: data,
        success: this.set_synchronous_request_response,
        async: false
      };
      $.ajax(url, settings);
      if (this.debug) {
        console.log('NW: Synchronous Request Response', this.synchronous_request_response);
      }
      return this.async_request_response;
    };

    return Server;

  })();

}).call(this);
